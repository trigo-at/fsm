[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "lib/add-to-array.js",
    "content": "'use strict';\n\n/** @private */\nmodule.exports = (array, val) => {\n\tif (array.indexOf(val) === -1) {\n\t\tarray.push(val);\n\t}\n};\n\n",
    "static": true,
    "longname": "lib/add-to-array.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "addtoarray",
    "memberof": "lib/add-to-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/add-to-array.js~addtoarray",
    "access": "private",
    "export": true,
    "importPath": "@trigo/fsm/lib/add-to-array.js",
    "importStyle": "addtoarray",
    "description": null,
    "lineNumber": 4,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "lib/add-to-array.specs.js",
    "content": "'use strict';\n\n/* eslint-env node, mocha */\n/* eslint no-unused-expressions: 0, arrow-body-style: 0 */\n\nconst addToArray = require('./add-to-array');\nconst { expect } = require('chai');\n\ndescribe('addToArray', () => {\n\tit('adds element to the array', () => {\n\t\tconst a = [];\n\t\taddToArray(a, 'a');\n\t\texpect(a).to.eql(['a']);\n\t});\n\tit('does not add duplicates', () => {\n\t\tconst a = [];\n\t\taddToArray(a, 'a');\n\t\taddToArray(a, 'a');\n\t\texpect(a).to.eql(['a']);\n\t});\n});\n",
    "static": true,
    "longname": "lib/add-to-array.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "addToArray",
    "memberof": "lib/add-to-array.specs.js",
    "static": true,
    "longname": "lib/add-to-array.specs.js~addToArray",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/add-to-array.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/add-to-array.specs.js",
    "static": true,
    "longname": "lib/add-to-array.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/add-to-array.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "file",
    "name": "lib/composit-state.js",
    "content": "'use strict';\n\nconst isValidStateValue = require('./is-valid-state-value');\n\nconst parse = (state) => {\n\tconst obj = {};\n\tstate.split('|').forEach((part) => {\n\t\tconst keyVal = part.split(':');\n\t\tobj[keyVal[0]] = keyVal[1];\n\t});\n\treturn obj;\n};\n\nconst build = (options) => {\n\tconst states = [];\n\tObject.keys(options).forEach((key) => {\n\t\tif (!isValidStateValue(options[key])) {\n\t\t\tthrow new Error(`Invalid state value! from: ${options[key]}`);\n\t\t}\n\t\tstates.push(`${key}:${options[key]}`);\n\t});\n\treturn states.sort().join('|');\n};\n\n/**\n *\n * Class to build, parse and manipulate composit states<br>\n *\n * State object in FSM are converted to string using this class<br>\n * The state object { a: 'val1', b: 'val2', c: 'val3' } is internaly stored<br>\n * in its string repreentation: \"a:val1|b:val2|c:val3\"\n *\n * This utillity class is available from {@link FSM#compositState} property\n *\n * @class\n */\nclass CompositState {\n\t/**\n\t * Build a state string from a javascript object\n\t *\n\t * @param {object} stateObj the state object\n\t *\n\t * @return {string} the string representation of the object\n\t */\n\tstatic build(stateObj) {\n\t\treturn build(stateObj);\n\t}\n\n\t/**\n\t * Build a state string from a javascript object\n\t *\n\t * @param {string} state the string representation of the object\n\t *\n\t * @return {object} the state object\n\t */\n\tstatic parse(state) {\n\t\treturn parse(state);\n\t}\n}\n\nmodule.exports = CompositState;\n",
    "static": true,
    "longname": "lib/composit-state.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "name": "isValidStateValue",
    "memberof": "lib/composit-state.js",
    "static": true,
    "longname": "lib/composit-state.js~isValidStateValue",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/composit-state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "function",
    "name": "parse",
    "memberof": "lib/composit-state.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/composit-state.js~parse",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/composit-state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "build",
    "memberof": "lib/composit-state.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/composit-state.js~build",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/composit-state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "class",
    "name": "CompositState",
    "memberof": "lib/composit-state.js",
    "static": true,
    "longname": "lib/composit-state.js~CompositState",
    "access": null,
    "export": true,
    "importPath": "@trigo/fsm/lib/composit-state.js",
    "importStyle": "CompositState",
    "description": "\nClass to build, parse and manipulate composit states<br>\n\nState object in FSM are converted to string using this class<br>\nThe state object { a: 'val1', b: 'val2', c: 'val3' } is internaly stored<br>\nin its string repreentation: \"a:val1|b:val2|c:val3\"\n\nThis utillity class is available from {@link FSM#compositState} property",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "name": "build",
    "memberof": "lib/composit-state.js~CompositState",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/composit-state.js~CompositState.build",
    "access": null,
    "description": "Build a state string from a javascript object",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "stateObj",
        "description": "the state object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the string representation of the object"
    }
  },
  {
    "__docId__": 11,
    "kind": "method",
    "name": "parse",
    "memberof": "lib/composit-state.js~CompositState",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/composit-state.js~CompositState.parse",
    "access": null,
    "description": "Build a state string from a javascript object",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the string representation of the object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the state object"
    }
  },
  {
    "__docId__": 12,
    "kind": "file",
    "name": "lib/composit-state.specs.js",
    "content": "'use strict';\n\n/* eslint-env node, mocha */\n/* eslint no-unused-expressions: 0, arrow-body-style: 0 */\n\nconst CompositState = require('./composit-state');\nconst { expect } = require('chai');\n\ndescribe('compositState', () => {\n\tdescribe('compositState.build({ ... })', () => {\n\t\tit('single state string', () => {\n\t\t\texpect(CompositState.build({ event: 'draft' })).to.equal('event:draft');\n\t\t});\n\t\tit('multi state string', () => {\n\t\t\texpect(CompositState.build({ event: 'draft', hotel: 'requested', venue: 'reserved' })).to.equal('event:draft|hotel:requested|venue:reserved');\n\t\t});\n\t});\n\n\tdescribe('compositState.parse(str)', () => {\n\t\tit('converts to object', () => {\n\t\t\texpect(CompositState.parse('event:draft|hotel:requested|venue:reserved')).to.eql({ event: 'draft', hotel: 'requested', venue: 'reserved' });\n\t\t});\n\t});\n});\n",
    "static": true,
    "longname": "lib/composit-state.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "name": "CompositState",
    "memberof": "lib/composit-state.specs.js",
    "static": true,
    "longname": "lib/composit-state.specs.js~CompositState",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/composit-state.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/composit-state.specs.js",
    "static": true,
    "longname": "lib/composit-state.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/composit-state.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "file",
    "name": "lib/find-current-transition.js",
    "content": "'use strict';\n\nconst toCamelCase = require('./to-camel-case');\n\n/** @private */\nmodule.exports = (transitionName, state, transitions) => {\n\tconst matches = transitions.filter(t => toCamelCase(t.name) === transitionName)\n\t\t.filter(t => Array.isArray(t.from) ? t.from.indexOf(state) !== -1 : t.from === state); //eslint-disable-line\n\n\tif (matches.length > 1) {\n\t\tthrow new Error(`Ambigious transitions found: ${matches.map(m => JSON.stringify(m)).join(' ')}`);\n\t}\n\treturn matches[0];\n};\n",
    "static": true,
    "longname": "lib/find-current-transition.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "name": "toCamelCase",
    "memberof": "lib/find-current-transition.js",
    "static": true,
    "longname": "lib/find-current-transition.js~toCamelCase",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "function",
    "name": "findcurrenttransition",
    "memberof": "lib/find-current-transition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/find-current-transition.js~findcurrenttransition",
    "access": "private",
    "export": true,
    "importPath": "@trigo/fsm/lib/find-current-transition.js",
    "importStyle": "findcurrenttransition",
    "description": null,
    "lineNumber": 6,
    "params": [
      {
        "name": "transitionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "transitions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "file",
    "name": "lib/find-current-transition.specs.js",
    "content": "'use strict';\n\n/* eslint-env node, mocha */\n/* eslint no-unused-expressions: 0, arrow-body-style: 0 */\n\nconst findCurrentTransition = require('./find-current-transition');\nconst { expect } = require('chai');\n\nconst t = { name: 'method:name', from: 'x', to: 'b' };\nconst t1 = { name: 'method:name', from: 'a', to: 'b' };\nconst t2 = { name: 'method:name', from: ['b', 'c'], to: 'b' };\nconst tConflict = { name: 'method:name', from: 'c', to: 'b' };\n\ndescribe('findCurrentTransition', () => {\n\tit('returns matching tarnsiton using toCacemCase', () => {\n\t\texpect(findCurrentTransition('methodName', 'a', [t, t1, t2])).to.eql(t1);\n\t});\n\n\tit('works with arrayed to', () => {\n\t\texpect(findCurrentTransition('methodName', 'b', [t, t1, t2])).to.eql(t2);\n\t});\n\n\tit('throws with abigious transtitins', () => {\n\t\texpect(() => findCurrentTransition('methodName', 'c', [t, t1, t2, tConflict])).to.throw(/Ambigious transitions found/);\n\t});\n});\n",
    "static": true,
    "longname": "lib/find-current-transition.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "findCurrentTransition",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~findCurrentTransition",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "name": "t",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~t",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"name\": string, \"from\": string, \"to\": string}"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "variable",
    "name": "t1",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~t1",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"name\": string, \"from\": string, \"to\": string}"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "name": "t2",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~t2",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"name\": string, \"from\": *, \"to\": string}"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "variable",
    "name": "tConflict",
    "memberof": "lib/find-current-transition.specs.js",
    "static": true,
    "longname": "lib/find-current-transition.specs.js~tConflict",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/find-current-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"name\": string, \"from\": string, \"to\": string}"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "lib/fsm.js",
    "content": "'use strict';\n\n/* eslint no-unused-expressions: 0, class-methods-use-this: 0 */\n\nconst toCamelCase = require('./to-camel-case');\nconst compositState = require('./composit-state');\nconst addToArray = require('./add-to-array');\nconst parseTrasition = require('./parse-transition');\nconst findCurrentTransition = require('./find-current-transition');\nconst getAllTakenNames = require('./get-all-taken-names');\n\nconst allStates = (transitions) => {\n\tconst states = [];\n\ttransitions.forEach((t) => {\n\t\t['from', 'to'].forEach((key) => {\n\t\t\taddToArray(states, t[key]);\n\t\t});\n\t});\n\tstates.sort();\n\treturn states;\n};\n\nconst validTransitions = (state, transitions) => {\n\tconst ts = [];\n\n\ttransitions.forEach((t) => {\n\t\tconst from = t.from;\n\t\tif (from.indexOf(state) !== -1) {\n\t\t\taddToArray(ts, t.name);\n\t\t}\n\t});\n\n\tts.sort();\n\treturn ts;\n};\n\nconst callIfSet = async (handler, ctx, args) => {\n\tif (handler && typeof handler === 'function') {\n\t\tconst a = [ctx].concat(args);\n\t\treturn handler(...a);\n\t}\n\treturn null;\n};\n\n/**\n * Class representing a Finite State Machine\n * @class\n */\nclass FSM {\n\n\t/**\n\t * Returns the composit state tool used to parse and build state strings from objects\n\t *\n\t * @return {CompositState} the composit sate tool\n\t */\n\tstatic get compositState() {\n\t\treturn compositState;\n\t}\n\n\t/**\n\t * Create a camelCase function name formthe given string. Used internally to convert transition names to function names\n\t *\n\t * @param {string} name the name to transform\n\t *\n\t * @return {string} camelCased version of the given name\n\t */\n\tstatic toFunctionName(name) {\n\t\treturn toCamelCase(name);\n\t}\n\t/**\n     * Create a new state machine.\n     * @param {object} options the initalisation object.\n     * @param {object} options.initialState the state string used to initialize the state machine\n     * @param {Array.<object>} options.transitions array of defined transitions\n     * @param {object} options.data the data that is stored in the state machine\n     * @param {function} options.saveState function with signature \"async (ctx, arg1, arg2...) => {...}\"\n     * @param {function} options.willChangeState function with signature \"async (ctx, arg1, arg2...) => {...}\"\n     * @param {function} options.didChangeState function with signature \"async (ctx, arg1, arg2...) => {...}\"\n     * @param {function} options.willSaveState function with signature \"async (ctx, arg1, arg2...) => {...}\"\n     * @param {function} options.didSaveState function with signature \"async (ctx, arg1, arg2...) => {...}\"\n     * @param {object} options.eventHandler object containin hander for specific trasaction\n\t *\t{ beforeTransName: async (ctx, args) => {...}, afterTransName: async (ctx, args) => {...}\n     */\n\tconstructor({ initialState, transitions, data, saveState, willChangeState, didChangeState, willSaveState, didSaveState, eventHandler }) {\n\t\tthis._state = '__uninitialized__';\n\t\tthis._transitions = [];\n\t\tthis._saveState = saveState;\n\t\tthis._willChangeState = willChangeState;\n\t\tthis._didChangeState = didChangeState;\n\t\tthis._willSaveState = willSaveState;\n\t\tthis._didSaveState = didSaveState;\n\t\tthis._data = data;\n\t\tthis._eventHandler = eventHandler || {};\n\t\tthis._trasitionFunctionNames = [];\n\n\t\tif (transitions) {\n\t\t\tthis.addTransition(transitions);\n\t\t}\n\n\t\tif (initialState) {\n\t\t\tthis.init(initialState);\n\t\t}\n\t}\n\n\t/**\n\t * Initalize an existing state machine with the given state\n\t *\n\t * @param {string} state the state string to set. The string must be one of the existing\n\t * states of the state machine\n\t */\n\tinit(state) {\n\t\tif (this.states().indexOf(state) === -1) {\n\t\t\tthrow new Error(`Invlaid state: \"${state}\" known states: ${this.states().join(', ')}`);\n\t\t}\n\t\tthis._state = state;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the current state string\n\t *\n\t * @return {string} the state string\n\t */\n\tget state() {\n\t\treturn this._state;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tset state(_) {\n\t\tthrow new Error('cannot set state');\n\t}\n\n\t/**\n\t * Get the data stored in the state machine\n\t *\n\t * @return {object} the stored data objec\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Set the data stored in the state machine\n\t *\n\t * @param {object} value the data object\n\t */\n\tset data(value) {\n\t\tthis._data = value;\n\t}\n\n\t/**\n\t * Get all known states of the state machine\n\t *\n\t * @return {Array.<string>} array of state strings\n\t */\n\tstates() {\n\t\treturn allStates(this._transitions).filter(s => s !== '*');\n\t}\n\n\t/**\n\t * Get all transitions that are valid for the current state of the state machine\n\t *\n\t * @return {Array.<string>} array of valid transitions name\n\t */\n\ttransitions() {\n\t\treturn validTransitions(this.state, this._transitions);\n\t}\n\n\t/**\n\t * Execute a transition\n\t *\n\t * @param {string} transition the name of the transition\n\t * @param {...any} args list of arguments passed to the event handlers during transition\n\t *\n\t * @return {object} object containing the results of the executed event handlers\n\t */\n\texecute(transition, ...args) {\n\t\treturn this[FSM.toFunctionName(transition)](...args);\n\t}\n\n\n\t/**\n\t * Add a new transition to the state machine\n\t *\n\t * @param {object} transition the name of the transition<br><br>\n\t * Suported syntax: (camelCasle, colon:case, snake_case, dash-case)<br>\n\t * myTransition, my:transition, my_transition, my-transition => will create function .myTransition()\n\t * @param {string} transition.name the name of the transition\n\t * @param {(string|object|Array.<string>|Array.<object>)} transition.form the states from which this\n\t * transition can be triggered.<br><br>\n\t * Supported syntax:<br>\n\t * '*' => allow from any state\n\t * 'state1' => allow only from state 'state1'<br>\n\t * ['state1', 'state2'] => allow transition from state1 & state2<br>\n\t * { state: ['s1', 's2'], substate: ['sub1', 'sub2'] } => allow transition from all states creates by calculating all<br>\n\t * permutations of the given states. 'state:s2|substate:sub1' 'state:s2|substate:sub1' 'state:s2|substate:sub2'\n\t * @param {(string|object} transition.form defines the state that is created after the transition<br><br>\n\t * Supported syntax:<br>\n\t * '*' => do not change source state<br>\n\t * 'state1' => sets target state to 'state1'<br>\n\t * { state: 's1' } => sets the property \"state\" of the current state to \"s1\" eg. patches the existing state object representation\n\t */\n\taddTransition(transition) {\n\t\tconst transitions = Array.isArray(transition) ? transition : [transition];\n\t\ttransitions.map(parseTrasition).forEach((transArray) => {\n\t\t\ttransArray.forEach((trans, index) => {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (this._trasitionFunctionNames.indexOf(FSM.toFunctionName(trans.name)) !== -1) {\n\t\t\t\t\t\tconst conflicting = this._trasitionFunctionNames[this._trasitionFunctionNames.indexOf(FSM.toFunctionName(trans.name))];\n\t\t\t\t\t\tthrow new Error(`Ambigious transtion name: \"${trans.name}\" conflicts with existing transition: \"${conflicting}\"`);\n\t\t\t\t\t}\n\t\t\t\t\tif (getAllTakenNames(this).has(FSM.toFunctionName(trans.name))) {\n\t\t\t\t\t\tthrow new Error(`Forbidden transition name: \"${trans.name}\" forbidden names: \"${Array.from(getAllTakenNames(this)).join(', ')}\"`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tthis._trasitionFunctionNames.push(FSM.toFunctionName(trans.name));\n\t\t\t\t}\n\n\t\t\t\tthis._transitions.push(trans);\n\t\t\t\tthis._buildTransition(trans);\n\t\t\t});\n\t\t});\n\t\treturn this;\n\t}\n\n\t_buildTransition(trans) {\n\t\tconst transitionName = toCamelCase(trans.name);\n\t\tif (this[transitionName]) return;\n\n\t\t/**\n\t\t * Run-time created transition methods\n\t\t *\n\t\t * @param {...any} args the arguments that will be passed to event handlers\n\t\t *\n\t\t * @return {object} contains the result objects from the event handlers\n\t\t */\n\t\tthis[transitionName] = async (...args) => {\n\t\t\tif (this.__inTransition) {\n\t\t\t\tthrow new Error('Cannot start transition when during running transition');\n\t\t\t}\n\t\t\tthis.__inTransition = true;\n\t\t\ttry {\n\t\t\t\tconst currentTransition = findCurrentTransition(transitionName, this.state, this._transitions);\n\t\t\t\t// console.log(currentTransition);\n\t\t\t\tconst validNames = this.transitions().map(toCamelCase);\n\t\t\t\tif (!currentTransition || (validNames.indexOf('*') === -1 && validNames.indexOf(transitionName) === -1)) {\n\t\t\t\t\tthrow new Error(`Invalid transition: \"${transitionName}\" in state: \"${this.state}\"`);\n\t\t\t\t}\n\t\t\t\tconst from = this.state;\n\t\t\t\tconst to = currentTransition.to === '*' ? from : currentTransition.to;\n\t\t\t\tconst ctx = {\n\t\t\t\t\ttransition: transitionName,\n\t\t\t\t\tfrom,\n\t\t\t\t\tto,\n\t\t\t\t\tfsm: this,\n\t\t\t\t};\n\t\t\t\tif (this._data) {\n\t\t\t\t\tctx.data = this._data;\n\t\t\t\t}\n\t\t\t\tconst beforeHandler = `before${transitionName[0].toUpperCase()}${transitionName.substring(1)}`;\n\t\t\t\tconst afterHandler = `after${transitionName[0].toUpperCase()}${transitionName.substring(1)}`;\n\n\t\t\t\tconst result = {};\n\t\t\t\tctx.results = result;\n\t\t\t\tresult.willChangeState = await callIfSet(this._willChangeState, ctx, args);\n\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\tresult[beforeHandler] = await callIfSet(this._eventHandler[beforeHandler], ctx, args);\n\t\t\t// console.log(`Change state: \"${from}\" => \"${to}\"`)\n\t\t\t\tthis._state = to;\n\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\tresult[afterHandler] = await callIfSet(this._eventHandler[afterHandler], ctx, args);\n\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\tresult.didChangeState = await callIfSet(this._didChangeState, ctx, args);\n\n\t\t\t\tif (this._saveState && typeof this._saveState === 'function') {\n\t\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\t\tresult.willSaveState = await callIfSet(this._willSaveState, ctx, args);\n\t\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\t\tresult.saveState = await this._saveState(ctx, args);\n\t\t\t\t\tctx.results = Object.assign({}, result);\n\t\t\t\t\tresult.didSaveState = await callIfSet(this._didSaveState, ctx, args);\n\t\t\t\t}\n\n\t\t\t\tthis.__inTransition = false;\n\t\t\t\treturn result;\n\t\t\t} catch (e) {\n\t\t\t\tthis.__inTransition = false;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = FSM;\n",
    "static": true,
    "longname": "lib/fsm.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "variable",
    "name": "toCamelCase",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~toCamelCase",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "compositState",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~compositState",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "name": "addToArray",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~addToArray",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "parseTrasition",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~parseTrasition",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "findCurrentTransition",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~findCurrentTransition",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "name": "getAllTakenNames",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~getAllTakenNames",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "allStates",
    "memberof": "lib/fsm.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/fsm.js~allStates",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "transitions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "validTransitions",
    "memberof": "lib/fsm.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/fsm.js~validTransitions",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "transitions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "callIfSet",
    "memberof": "lib/fsm.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/fsm.js~callIfSet",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "class",
    "name": "FSM",
    "memberof": "lib/fsm.js",
    "static": true,
    "longname": "lib/fsm.js~FSM",
    "access": null,
    "export": true,
    "importPath": "@trigo/fsm/lib/fsm.js",
    "importStyle": "FSM",
    "description": "Class representing a Finite State Machine",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 36,
    "kind": "get",
    "name": "compositState",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/fsm.js~FSM.compositState",
    "access": null,
    "description": "Returns the composit state tool used to parse and build state strings from objects",
    "lineNumber": 56,
    "return": {
      "nullable": null,
      "types": [
        "CompositState"
      ],
      "spread": false,
      "description": "the composit sate tool"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "toFunctionName",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/fsm.js~FSM.toFunctionName",
    "access": null,
    "description": "Create a camelCase function name formthe given string. Used internally to convert transition names to function names",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name to transform"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "camelCased version of the given name"
    }
  },
  {
    "__docId__": 38,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#constructor",
    "access": null,
    "description": "Create a new state machine.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the initalisation object."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.initialState",
        "description": "the state string used to initialize the state machine"
      },
      {
        "nullable": null,
        "types": [
          "Array.<object>"
        ],
        "spread": false,
        "optional": false,
        "name": "options.transitions",
        "description": "array of defined transitions"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.data",
        "description": "the data that is stored in the state machine"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.saveState",
        "description": "function with signature \"async (ctx, arg1, arg2...) => {...}\""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.willChangeState",
        "description": "function with signature \"async (ctx, arg1, arg2...) => {...}\""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.didChangeState",
        "description": "function with signature \"async (ctx, arg1, arg2...) => {...}\""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.willSaveState",
        "description": "function with signature \"async (ctx, arg1, arg2...) => {...}\""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.didSaveState",
        "description": "function with signature \"async (ctx, arg1, arg2...) => {...}\""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.eventHandler",
        "description": "object containin hander for specific trasaction\n{ beforeTransName: async (ctx, args) => {...}, afterTransName: async (ctx, args) => {...}"
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "member",
    "name": "_state",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_state",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "name": "_transitions",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_transitions",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "_saveState",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_saveState",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "_willChangeState",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_willChangeState",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "_didChangeState",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_didChangeState",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "member",
    "name": "_willSaveState",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_willSaveState",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "_didSaveState",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_didSaveState",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "member",
    "name": "_data",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_data",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "_eventHandler",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_eventHandler",
    "access": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "_trasitionFunctionNames",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_trasitionFunctionNames",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "init",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#init",
    "access": null,
    "description": "Initalize an existing state machine with the given state",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the state string to set. The string must be one of the existing\nstates of the state machine"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "_state",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_state",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "name": "state",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#state",
    "access": null,
    "description": "Get the current state string",
    "lineNumber": 124,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the state string"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "set",
    "name": "state",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#state",
    "access": "private",
    "description": "",
    "lineNumber": 131,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "get",
    "name": "data",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#data",
    "access": null,
    "description": "Get the data stored in the state machine",
    "lineNumber": 140,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the stored data objec"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "set",
    "name": "data",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#data",
    "access": null,
    "description": "Set the data stored in the state machine",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the data object"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_data",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_data",
    "access": null,
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "states",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#states",
    "access": null,
    "description": "Get all known states of the state machine",
    "lineNumber": 158,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": "array of state strings"
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "transitions",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#transitions",
    "access": null,
    "description": "Get all transitions that are valid for the current state of the state machine",
    "lineNumber": 167,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": "array of valid transitions name"
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "execute",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#execute",
    "access": null,
    "description": "Execute a transition",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "transition",
        "description": "the name of the transition"
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "list of arguments passed to the event handlers during transition"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "object containing the results of the executed event handlers"
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "addTransition",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#addTransition",
    "access": null,
    "description": "Add a new transition to the state machine",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "transition",
        "description": "the name of the transition<br><br>\nSuported syntax: (camelCasle, colon:case, snake_case, dash-case)<br>\nmyTransition, my:transition, my_transition, my-transition => will create function .myTransition()"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "transition.name",
        "description": "the name of the transition"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object",
          "Array.<string>",
          "Array.<object>"
        ],
        "spread": false,
        "optional": false,
        "name": "transition.form",
        "description": "the states from which this\ntransition can be triggered.<br><br>\nSupported syntax:<br>\n'*' => allow from any state\n'state1' => allow only from state 'state1'<br>\n['state1', 'state2'] => allow transition from state1 & state2<br>\n{ state: ['s1', 's2'], substate: ['sub1', 'sub2'] } => allow transition from all states creates by calculating all<br>\npermutations of the given states. 'state:s2|substate:sub1' 'state:s2|substate:sub1' 'state:s2|substate:sub2'"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "transition.form",
        "description": "defines the state that is created after the transition<br><br>\nSupported syntax:<br>\n'*' => do not change source state<br>\n'state1' => sets target state to 'state1'<br>\n{ state: 's1' } => sets the property \"state\" of the current state to \"s1\" eg. patches the existing state object representation"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "_buildTransition",
    "memberof": "lib/fsm.js~FSM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/fsm.js~FSM#_buildTransition",
    "access": null,
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "trans",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "[transitionName]",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#[transitionName]",
    "access": null,
    "description": "Run-time created transition methods",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "the arguments that will be passed to event handlers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "contains the result objects from the event handlers"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "__inTransition",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#__inTransition",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "_state",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#_state",
    "access": null,
    "description": null,
    "lineNumber": 272,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "__inTransition",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#__inTransition",
    "access": null,
    "description": null,
    "lineNumber": 287,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "__inTransition",
    "memberof": "lib/fsm.js~FSM",
    "static": false,
    "longname": "lib/fsm.js~FSM#__inTransition",
    "access": null,
    "description": null,
    "lineNumber": 290,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "lib/fsm.specs.js",
    "content": "'use strict';\n\n/* eslint-env node, mocha */\n/* eslint no-unused-expressions: 0, one-var-declaration-per-line: 0, one-var: 0, no-empty: 0  */\n\nconst bb = require('bluebird');\n\nconst FSM = require('./fsm');\nconst { expect } = require('chai');\nconst compositState = require('./composit-state');\n\ndescribe('FSM', () => {\n\tdescribe('statics', () => {\n\t\tit('exposes compositState tool', () => {\n\t\t\texpect(FSM.compositState).to.equal(compositState);\n\t\t});\n\n\t\tit('cannot set compositState', () => {\n\t\t\texpect(() => { FSM.compositState = () => {}; }).to.throw();\n\t\t});\n\n\t\tit('exposes toFunctionName() helper', () => {\n\t\t\texpect(FSM.toFunctionName('test:transition:oida')).to.equal('testTransitionOida');\n\t\t});\n\t});\n\n\tdescribe('can use state Objects (compositState)', () => {\n\t\tit('can define state as object { namespace: \"default\", namespace2: \"planning\" }', () => {\n\t\t\tconst f = new FSM({\n\t\t\t\ttransitions: [\n\t\t\t\t\t{ name: 't1', from: { ns1: 'def', ns2: 'fe' }, to: 'b' },\n\t\t\t\t\t{ name: 't2', from: [{ ns1: 'd2', ns2: 'd3' }, { ns1: 'd3', ns2: 'd4' }], to: 'x' },\n\t\t\t\t],\n\t\t\t});\n\n\t\t\texpect(f.states()).to.eql(['ns1:def|ns2:fe', 'b', 'ns1:d2|ns2:d3', 'ns1:d3|ns2:d4', 'x'].sort());\n\t\t});\n\n\t\tit('to in object notation patches from stat', async () => {\n\t\t\tconst f = new FSM({\n\t\t\t\tinitialState: 'ns1:def|ns2:fe',\n\t\t\t\ttransitions: [\n\t\t\t\t\t{ name: 't1', from: { ns1: 'def', ns2: 'fe' }, to: { ns1: 'b' } },\n\t\t\t\t],\n\t\t\t});\n\t\t\texpect(f.states()).to.eql(['ns1:def|ns2:fe', 'ns1:b|ns2:fe'].sort());\n\t\t\tawait f.t1();\n\t\t\texpect(f.state).to.equal('ns1:b|ns2:fe');\n\t\t});\n\n\t\tit('creates state permutation with object notation', async () => {\n\t\t\tconst f = new FSM({\n\t\t\t\tinitialState: 'k1:k11|k2:k21',\n\t\t\t\ttransitions: [\n\t\t\t\t\t{ name: 't1', from: { k1: ['k11', 'k12'], k2: ['k21', 'k22'] }, to: '*' },\n\t\t\t\t],\n\t\t\t});\n\n\t\t\texpect(f.states()).to.eql([\n\t\t\t\t'k1:k11|k2:k21',\n\t\t\t\t'k1:k12|k2:k21',\n\t\t\t\t'k1:k11|k2:k22',\n\t\t\t\t'k1:k12|k2:k22',\n\t\t\t].sort());\n\t\t\tf.init('k1:k11|k2:k21');\n\t\t\tawait f.t1();\n\t\t\texpect(f.state).to.equal('k1:k11|k2:k21');\n\t\t\tf.init('k1:k12|k2:k21');\n\t\t\tawait f.t1();\n\t\t\texpect(f.state).to.equal('k1:k12|k2:k21');\n\t\t\tf.init('k1:k11|k2:k22');\n\t\t\tawait f.t1();\n\t\t\texpect(f.state).to.equal('k1:k11|k2:k22');\n\t\t\tf.init('k1:k12|k2:k22');\n\t\t\tawait f.t1();\n\t\t\texpect(f.state).to.equal('k1:k12|k2:k22');\n\t\t});\n\t});\n\n\tdescribe('fluent build API', () => {\n\t\tit('can add transition', async () => {\n\t\t\tconst f = new FSM({});\n\t\t\tf.addTransition({ name: 'trans', from: 'a', to: 'b' })\n\t\t\t\t.addTransition({ name: 'trans2', from: ['a', 'b'], to: 'c' })\n\t\t\t\t.init('a');\n\t\t\tawait f.trans();\n\t\t\texpect(f.state).to.equal('b');\n\t\t\tawait f.trans2();\n\t\t\texpect(f.state).to.equal('c');\n\t\t});\n\n\t\tit('can add transition array', async () => {\n\t\t\tconst f = new FSM({});\n\t\t\tf.addTransition([{ name: 'trans', from: 'a', to: 'b' },\n\t\t\t\t{ name: 'trans2', from: ['a', 'b'], to: 'c' }])\n\t\t\t\t.init('a');\n\n\t\t\tawait f.trans();\n\t\t\texpect(f.state).to.equal('b');\n\t\t\tawait f.trans2();\n\t\t\texpect(f.state).to.equal('c');\n\t\t});\n\t\tit('validates transitions', () => {\n\t\t\tconst f = new FSM({});\n\t\t\texpect(() => f.addTransition({})).to.throw(/Invalid transition/);\n\t\t});\n\n\t\tit('does not allow trasition name clashes', () => {\n\t\t\tconst f = new FSM({});\n\t\t\tf.addTransition({ name: 'a-to-b', from: 'a', to: 'b' });\n\t\t\texpect(() => f.addTransition({ name: 'a:to:b', from: 'a', to: 'b' })).to.throw(/Ambigious transtion name/);\n\t\t});\n\n\t\tit('does not allow transiion named like native FSM methods', () => {\n\t\t\tconst f = new FSM({});\n\t\t\texpect(() => f.addTransition({ name: 'execute', from: 'a', to: 'b' })).to.throw(/Forbidden transition name/);\n\t\t\texpect(() => f.addTransition({ name: 'add:transition', from: 'a', to: 'b' })).to.throw(/Forbidden transition name/);\n\t\t});\n\t});\n\n\tdescribe('ctor, API & state constrainsts', () => {\n\t\tlet fsm;\n\t\tbeforeEach(() => {\n\t\t\tfsm = new FSM({\n\t\t\t\ttransitions: [\n\t\t\t\t\t{ name: 'a-to-b', from: 'a', to: 'b' },\n\t\t\t\t\t{ name: 'no:op', from: 'a', to: '*' },\n\t\t\t\t\t{ name: 'b-to-c', from: 'b', to: 'c' }],\n\t\t\t});\n\t\t\tfsm.init('a');\n\t\t});\n\n\t\tit('can create empty FSM', () => {\n\t\t\tnew FSM({}); //eslint-disable-line\n\t\t});\n\t\tit('uninitialized: state == \"__uninitialized__\"', () => {\n\t\t\texpect(new FSM({ transitions: [] }).state).to.equal('__uninitialized__');\n\t\t});\n\n\t\tit('validates transitions', () => {\n\t\t\texpect(() => new FSM({ transitions: [{}] })).to.throw(/Invalid transition/);\n\t\t});\n\t\tit('init(state)', () => {\n\t\t\tfsm.init('a');\n\t\t\texpect(fsm.state).to.equal('a');\n\t\t});\n\n\t\tit('init(state) - checks if valid state', () => {\n\t\t\texpect(() => fsm.init('rya')).to.throw(/Invlaid state: \"rya\" known states/);\n\t\t});\n\n\t\tit('cannot set \"state: property', () => {\n\t\t\texpect(() => {\n\t\t\t\tfsm.state = 'test';\n\t\t\t}).to.throw('cannot set state');\n\t\t});\n\n\t\tit('can access \"data\" obj', () => {\n\t\t\tconst dataObj = { dat: 'a', onbj: { as: 'as' } };\n\t\t\tconst f = new FSM({ data: dataObj });\n\t\t\texpect(f.data).to.equal(dataObj);\n\t\t});\n\n\t\tit('can set \"data\" obj', () => {\n\t\t\tconst dataObj = { dat: 'a', onbj: { as: 'as' } };\n\t\t\tconst f = new FSM({});\n\t\t\tf.data = dataObj;\n\t\t\texpect(f.data).to.equal(dataObj);\n\t\t});\n\n\t\tit('creates transition methods', () => {\n\t\t\texpect(fsm.aToB).to.be.instanceof(Function);\n\t\t\texpect(fsm.noOp).to.be.instanceof(Function);\n\t\t\texpect(fsm.bToC).to.be.instanceof(Function);\n\t\t});\n\n\t\tit('changes state when calling transition method', async () => {\n\t\t\tawait fsm.aToB();\n\t\t\texpect(fsm.state).to.equal('b');\n\t\t});\n\n\t\tit('chances state using \"execute(trasnition:name)\"', async () => {\n\t\t\tawait fsm.execute('a-to-b', { arg: 'obj' });\n\t\t\texpect(fsm.state).to.equal('b');\n\t\t});\n\n\t\tit('chances state using \"execute(trasnitionName)\"', async () => {\n\t\t\tawait fsm.execute('aToB', { arg: 'obj' });\n\t\t\texpect(fsm.state).to.equal('b');\n\t\t});\n\n\t\tit('keeps state when \"to\" === \"*\"', async () => {\n\t\t\tawait fsm.noOp();\n\t\t\texpect(fsm.state).to.equal('a');\n\t\t});\n\n\t\tit('can list valid transitions', async () => {\n\t\t\texpect(fsm.transitions()).to.eql(['a-to-b', 'no:op']);\n\t\t});\n\n\t\tit('cannot run invalid transition', async () => {\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tawait fsm.bToC();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('Invalid transition: \"bToC\" in state: \"a\"');\n\t\t});\n\n\t\tit('can list allStates', () => {\n\t\t\texpect(fsm.states()).to.eql(['a', 'b', 'c']);\n\t\t});\n\t});\n\n\tdescribe('transition definitions', () => {\n\t\tit('can use array in from clause', async () => {\n\t\t\tconst fsm = new FSM({\n\t\t\t\tinitialState: 'a',\n\t\t\t\ttransitions: [\n\t\t\t\t\t{ name: 'trans1', from: ['a', 'b', 'c'], to: 'd' },\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tawait fsm.trans1();\n\t\t\tfsm.init('b');\n\t\t\tawait fsm.trans1();\n\t\t\tfsm.init('c');\n\t\t\tawait fsm.trans1();\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tawait fsm.trans1();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('Invalid transition: \"trans1\" in state: \"d\"');\n\t\t});\n\t});\n\n\tdescribe('saveState', () => {\n\t\tit('can use async \"saveState\"', async () => {\n\t\t\tlet saved;\n\t\t\tconst fsm = new FSM({\n\t\t\t\tinitialState: 'a',\n\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\tsaveState: async (ctx) => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tsaved = ctx.fsm.state;\n\t\t\t\t},\n\t\t\t});\n\t\t\tawait fsm.trans();\n\t\t\texpect(saved).to.equal('b');\n\t\t});\n\t\tit('can use sync \"saveState\"', async () => {\n\t\t\tlet ctx, args;\n\t\t\tconst fsm = new FSM({\n\t\t\t\tinitialState: 'a',\n\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\tsaveState: (c, a) => {\n\t\t\t\t\tctx = c;\n\t\t\t\t\targs = a;\n\t\t\t\t},\n\t\t\t});\n\t\t\tawait fsm.trans(42, 'test');\n\t\t\texpect(ctx).to.eql({\n\t\t\t\tfrom: 'a',\n\t\t\t\tto: 'b',\n\t\t\t\ttransition: 'trans',\n\t\t\t\tfsm,\n\t\t\t\tresults: {\n\t\t\t\t\twillChangeState: null,\n\t\t\t\t\tbeforeTrans: null,\n\t\t\t\t\tafterTrans: null,\n\t\t\t\t\tdidChangeState: null,\n\t\t\t\t\twillSaveState: null,\n\t\t\t\t\tsaveState: undefined,\n\t\t\t\t},\n\t\t\t});\n\t\t\texpect(args).to.eql([42, 'test']);\n\t\t});\n\n\t\tit('throw when exection is throw in sync \"saveState\"', async () => {\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tconst fsm = new FSM({\n\t\t\t\t\tinitialState: 'a',\n\t\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\t\tsaveState: () => {\n\t\t\t\t\t\tthrow new Error('save failed');\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('save failed');\n\t\t});\n\t\tit('throw when exection is throw in async \"saveState\"', async () => {\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tconst fsm = new FSM({\n\t\t\t\t\tinitialState: 'a',\n\t\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\t\tsaveState: async () => {\n\t\t\t\t\t\tawait bb.delay(20);\n\t\t\t\t\t\tthrow new Error('save failed');\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('save failed');\n\t\t});\n\t});\n\n\tdescribe('transiton events', () => {\n\t\tlet fsm, cfg, ts;\n\t\tconst data = { test: 'data' };\n\t\tbeforeEach(() => {\n\t\t\tts = [];\n\t\t\tcfg = {\n\t\t\t\tinitialState: 'a',\n\t\t\t\tdata,\n\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\tsaveState: () => 'saveState',\n\t\t\t\twillChangeState: async (ctx, a1, a2) => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tts.push({ name: 'willChangeState', ctx, args: [a1, a2] });\n\t\t\t\t\treturn 'willChangeState';\n\t\t\t\t},\n\t\t\t\tdidChangeState: async (ctx, ...args) => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tts.push({ name: 'didChangeState', ctx, args });\n\t\t\t\t\treturn 'didChangeState';\n\t\t\t\t},\n\t\t\t\twillSaveState: async (ctx, ...args) => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tts.push({ name: 'willSaveState', ctx, args });\n\t\t\t\t\treturn 'willSaveState';\n\t\t\t\t},\n\t\t\t\tdidSaveState: async (ctx, ...args) => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tts.push({ name: 'didSaveState', ctx, args });\n\t\t\t\t\treturn 'didSaveState';\n\t\t\t\t},\n\t\t\t\teventHandler: {\n\t\t\t\t\tbeforeTrans: async (ctx, ...args) => {\n\t\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\t\tts.push({ name: 'beforeTrans', ctx, args });\n\t\t\t\t\t\treturn 'beforeTrans';\n\t\t\t\t\t},\n\t\t\t\t\tafterTrans: async (ctx, ...args) => {\n\t\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\t\tts.push({ name: 'afterTrans', ctx, args });\n\t\t\t\t\t\treturn 'afterTrans';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tit('calls transition methods with \"ctx\" and args', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.trans(42, 'test');\n\t\t\texpect(ts[0].ctx).to.eql({\n\t\t\t\tfrom: 'a',\n\t\t\t\tto: 'b',\n\t\t\t\ttransition: 'trans',\n\t\t\t\tfsm,\n\t\t\t\tdata,\n\t\t\t\tresults: {\n\t\t\t\t\twillChangeState: 'willChangeState',\n\t\t\t\t\tbeforeTrans: 'beforeTrans',\n\t\t\t\t\tafterTrans: 'afterTrans',\n\t\t\t\t\tdidChangeState: 'didChangeState',\n\t\t\t\t\twillSaveState: 'willSaveState',\n\t\t\t\t\tsaveState: 'saveState',\n\t\t\t\t},\n\t\t\t});\n\t\t\texpect(ts[0].args).to.eql([42, 'test']);\n\t\t});\n\n\t\tit('with \"execute(trasnition)\" calls transition methods with \"ctx\" and args', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.execute('trans', 42, 'test');\n\t\t\texpect(ts[0].ctx).to.eql({\n\t\t\t\tfrom: 'a',\n\t\t\t\tto: 'b',\n\t\t\t\ttransition: 'trans',\n\t\t\t\tfsm,\n\t\t\t\tdata,\n\t\t\t\tresults: {\n\t\t\t\t\twillChangeState: 'willChangeState',\n\t\t\t\t\tbeforeTrans: 'beforeTrans',\n\t\t\t\t\tafterTrans: 'afterTrans',\n\t\t\t\t\tdidChangeState: 'didChangeState',\n\t\t\t\t\twillSaveState: 'willSaveState',\n\t\t\t\t\tsaveState: 'saveState',\n\t\t\t\t},\n\t\t\t});\n\t\t\texpect(ts[0].args).to.eql([42, 'test']);\n\t\t});\n\n\t\tit('calls transition events in order', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.trans();\n\t\t\texpect(ts[0].name).to.equal('willChangeState');\n\t\t\texpect(ts[1].name).to.equal('beforeTrans');\n\t\t\texpect(ts[2].name).to.equal('afterTrans');\n\t\t\texpect(ts[3].name).to.equal('didChangeState');\n\t\t\texpect(ts[4].name).to.equal('willSaveState');\n\t\t\texpect(ts[5].name).to.equal('didSaveState');\n\t\t});\n\n\t\tit('returns all transitionHanlder results', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tconst result = await fsm.trans();\n\t\t\texpect(result).to.eql({\n\t\t\t\twillChangeState: 'willChangeState',\n\t\t\t\tbeforeTrans: 'beforeTrans',\n\t\t\t\tafterTrans: 'afterTrans',\n\t\t\t\tdidChangeState: 'didChangeState',\n\t\t\t\twillSaveState: 'willSaveState',\n\t\t\t\tsaveState: 'saveState',\n\t\t\t\tdidSaveState: 'didSaveState',\n\t\t\t});\n\t\t});\n\n\t\tit('throw error when beforeTransiton handler fails does not change state', async () => {\n\t\t\tcfg.eventHandler.beforeTrans = async () => {\n\t\t\t\tawait bb.delay(5);\n\t\t\t\tthrow new Error('derdo');\n\t\t\t};\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tfsm = new FSM(cfg);\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('derdo');\n\t\t\texpect(ts[0].name).to.equal('willChangeState');\n\t\t\texpect(ts.length).to.equal(1);\n\t\t\texpect(fsm.state).to.equal('a');\n\t\t});\n\t\tit('throw error when afterTransiton handler fails changes state', async () => {\n\t\t\tcfg.eventHandler.afterTrans = async () => {\n\t\t\t\tawait bb.delay(5);\n\t\t\t\tthrow new Error('derdo');\n\t\t\t};\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tfsm = new FSM(cfg);\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('derdo');\n\t\t\texpect(ts[0].name).to.equal('willChangeState');\n\t\t\texpect(ts[1].name).to.equal('beforeTrans');\n\t\t\texpect(ts.length).to.equal(2);\n\t\t\texpect(fsm.state).to.equal('b');\n\t\t});\n\t});\n\n\tdescribe('global transition events', () => {\n\t\tlet fsm, cfg, ts;\n\t\tbeforeEach(() => {\n\t\t\tts = [];\n\t\t\tcfg = {\n\t\t\t\tinitialState: 'a',\n\t\t\t\ttransitions: [{ name: 'trans', from: 'a', to: 'b' }],\n\t\t\t\tsaveState: () => {},\n\t\t\t\twillChangeState: (ctx, ...args) => {\n\t\t\t\t\tts.push({ name: 'willChangeState', ctx, args });\n\t\t\t\t},\n\t\t\t\tdidChangeState: (ctx, ...args) => {\n\t\t\t\t\tts.push({ name: 'didChangeState', ctx, args });\n\t\t\t\t},\n\t\t\t\twillSaveState: (ctx, ...args) => {\n\t\t\t\t\tts.push({ name: 'willSaveState', ctx, args });\n\t\t\t\t},\n\t\t\t\tdidSaveState: (ctx, ...args) => {\n\t\t\t\t\tts.push({ name: 'didSaveState', ctx, args });\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\n\t\tit('calls transition events in order', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.trans();\n\t\t\texpect(ts[0].name).to.equal('willChangeState');\n\t\t\texpect(ts[1].name).to.equal('didChangeState');\n\t\t\texpect(ts[2].name).to.equal('willSaveState');\n\t\t\texpect(ts[3].name).to.equal('didSaveState');\n\t\t});\n\n\t\tit('calls will & didSaveState only called when saveState is defined', async () => {\n\t\t\tdelete cfg.saveState;\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.trans();\n\t\t\texpect(ts[0].name).to.equal('willChangeState');\n\t\t\texpect(ts[1].name).to.equal('didChangeState');\n\t\t\texpect(ts.length).to.equal(2);\n\t\t});\n\n\t\tit('throw error when willChangeState & state does not change', async () => {\n\t\t\tcfg.willChangeState = () => {\n\t\t\t\tthrow new Error('derdo');\n\t\t\t};\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tfsm = new FSM(cfg);\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('derdo');\n\t\t\texpect(fsm.state).to.equal('a');\n\t\t});\n\t\tit('throw error when didChangeState & state changes', async () => {\n\t\t\tcfg.didChangeState = () => {\n\t\t\t\tthrow new Error('derdo');\n\t\t\t};\n\t\t\tlet error;\n\t\t\ttry {\n\t\t\t\tfsm = new FSM(cfg);\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\texpect(error).to.exist;\n\t\t\texpect(error.message).to.equal('derdo');\n\t\t\texpect(fsm.state).to.equal('b');\n\t\t});\n\t});\n\n\tdescribe('race conditions', () => {\n\t\tlet fsm, cfg;\n\t\tbeforeEach(() => {\n\t\t\tcfg = {\n\t\t\t\tinitialState: 'a',\n\t\t\t\ttransitions: [{ name: 'trans', from: ['a', 'b'], to: 'b' }, { name: 'trans2', from: ['a', 'b'], to: 'a' }],\n\t\t\t\tsaveState: () => {},\n\t\t\t\twillChangeState: () => bb.delay(5),\n\t\t\t};\n\t\t});\n\n\t\tit('cannot start transition while anothr one is running', (done) => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tfsm.trans();\n\t\t\tfsm.trans2().then(() => done(new Error('should have failed'))).catch((err) => {\n\t\t\t\texpect(err.message).to.equal('Cannot start transition when during running transition');\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t\tit('can run transition sequential', async () => {\n\t\t\tfsm = new FSM(cfg);\n\t\t\tawait fsm.trans();\n\t\t\tawait fsm.trans2();\n\t\t});\n\n\t\tit('can run transtition after a trasition was abourted', async () => {\n\t\t\tcfg.eventHandler = {\n\t\t\t\tbeforeTrans: async () => {\n\t\t\t\t\tawait bb.delay(5);\n\t\t\t\t\tthrow new Error('uuppps');\n\t\t\t\t},\n\t\t\t};\n\t\t\tfsm = new FSM(cfg);\n\t\t\ttry {\n\t\t\t\tawait fsm.trans();\n\t\t\t} catch (e) {}\n\t\t\tawait fsm.trans2();\n\t\t});\n\t});\n});\n",
    "static": true,
    "longname": "lib/fsm.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "bb",
    "memberof": "lib/fsm.specs.js",
    "static": true,
    "longname": "lib/fsm.specs.js~bb",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "FSM",
    "memberof": "lib/fsm.specs.js",
    "static": true,
    "longname": "lib/fsm.specs.js~FSM",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/fsm.specs.js",
    "static": true,
    "longname": "lib/fsm.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "compositState",
    "memberof": "lib/fsm.specs.js",
    "static": true,
    "longname": "lib/fsm.specs.js~compositState",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/fsm.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "lib/get-all-taken-names.js",
    "content": "'use strict';\n\n/** @private */\nmodule.exports = (obj) => {\n\tconst methods = new Set();\n\twhile (obj = Reflect.getPrototypeOf(obj)) { // eslint-disable-line\n\t\tconst keys = Reflect.ownKeys(obj);\n\t\tkeys.forEach(k => methods.add(k));\n\t}\n\treturn methods;\n};\n",
    "static": true,
    "longname": "lib/get-all-taken-names.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "getalltakennames",
    "memberof": "lib/get-all-taken-names.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/get-all-taken-names.js~getalltakennames",
    "access": "private",
    "export": true,
    "importPath": "@trigo/fsm/lib/get-all-taken-names.js",
    "importStyle": "getalltakennames",
    "description": null,
    "lineNumber": 4,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "lib/is-valid-state-value.js",
    "content": "'use strict';\n\nconst STATE_KEY_REGEX = /^([a-zA-Z0-9-_.#/@$%^!=<>+~?]+|\\*)$/;\nmodule.exports = value => value.match(STATE_KEY_REGEX);\n",
    "static": true,
    "longname": "lib/is-valid-state-value.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "STATE_KEY_REGEX",
    "memberof": "lib/is-valid-state-value.js",
    "static": true,
    "longname": "lib/is-valid-state-value.js~STATE_KEY_REGEX",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/is-valid-state-value.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "isvalidstatevalue",
    "memberof": "lib/is-valid-state-value.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/is-valid-state-value.js~isvalidstatevalue",
    "access": null,
    "export": true,
    "importPath": "@trigo/fsm/lib/is-valid-state-value.js",
    "importStyle": "isvalidstatevalue",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "lib/parse-transition.js",
    "content": "'use strict';\n\nconst compositState = require('./composit-state.js');\nconst isValidStateValue = require('./is-valid-state-value');\n\nconst explodeKey = (froms, key) => {\n\tconst ret = [];\n\tfroms.forEach((from) => {\n\t\tfrom[key].forEach((val) => {\n\t\t\tconst patch = {};\n\t\t\tpatch[key] = val;\n\t\t\tret.push(Object.assign({}, from, patch));\n\t\t});\n\t});\n\treturn ret;\n};\n\nconst explode = (from) => {\n\tconst keys = Object.keys(from);\n\tlet froms = [from];\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tif (Array.isArray(from[key])) {\n\t\t\tfroms = explodeKey(froms, key);\n\t\t}\n\t}\n\treturn froms;\n};\n\nconst createPermutations = (froms) => {\n\tconst sets = froms.map(explode);\n\tconst flat = [];\n\tsets.forEach((set) => {\n\t\tset.forEach((line) => {\n\t\t\tflat.push(line);\n\t\t});\n\t});\n\n\treturn flat;\n};\n\n/** @private */\nmodule.exports = (transition) => {\n\tconst trans = Object.assign({}, transition);\n\tif (!trans.name || !trans.name.replace(/ /g, '') || trans.name === '__uninitialized__') {\n\t\tthrow new Error(`Invalid transition name: ${trans.name}`);\n\t}\n\n\tif (!trans.to) throw new Error(`Invalid transition to: ${trans.to}`);\n\tif (typeof trans.to === 'string') {\n\t\tif (!trans.to || !trans.to.replace(/ /g, '') || trans.to === '__uninitialized__') {\n\t\t\tthrow new Error(`Invalid transition to: ${trans.to}`);\n\t\t}\n\t}\n\n\tlet froms = Array.isArray(trans.from) ? trans.from : [trans.from];\n\tfroms.forEach((from) => {\n\t\tif (!from || (typeof from === 'string' && !isValidStateValue(from))) {\n\t\t\tthrow new Error(`Invalid state value! from: ${from}`);\n\t\t}\n\t});\n\tfroms = createPermutations(froms);\n\treturn trans.from = froms.map((from) => {// eslint-disable-line\n\t\tlet to = trans.to;\n\t\tif (typeof trans.to === 'object' && typeof from === 'object') {\n\t\t\tto = compositState.build(Object.assign({}, from, trans.to));\n\t\t} else if (typeof trans.to === 'object') {\n\t\t\tto = compositState.build(trans.to);\n\t\t} else if (typeof trans.to === 'string' && !isValidStateValue(trans.to)) {\n\t\t\tthrow new Error(`Invalid state value! to: ${trans.to}`);\n\t\t}\n\n\t\tconst t = { name: trans.name, to };\n\t\tif (from && typeof from === 'object') {\n\t\t\tt.from = compositState.build(from); // eslint-disable-line\n\t\t} else {\n\t\t\tt.from = from;\n\t\t}\n\n\t\tif (!t.from || !t.from.replace(/ /g, '') || t.from === '__uninitialized__') {\n\t\t\tthrow new Error(`Invalid transition from: ${t.from}`);\n\t\t}\n\t\treturn t;\n\t});\n};\n",
    "static": true,
    "longname": "lib/parse-transition.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "compositState",
    "memberof": "lib/parse-transition.js",
    "static": true,
    "longname": "lib/parse-transition.js~compositState",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "isValidStateValue",
    "memberof": "lib/parse-transition.js",
    "static": true,
    "longname": "lib/parse-transition.js~isValidStateValue",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "explodeKey",
    "memberof": "lib/parse-transition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/parse-transition.js~explodeKey",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "froms",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "explode",
    "memberof": "lib/parse-transition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/parse-transition.js~explode",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "createPermutations",
    "memberof": "lib/parse-transition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/parse-transition.js~createPermutations",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "froms",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "parsetransition",
    "memberof": "lib/parse-transition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/parse-transition.js~parsetransition",
    "access": "private",
    "export": true,
    "importPath": "@trigo/fsm/lib/parse-transition.js",
    "importStyle": "parsetransition",
    "description": null,
    "lineNumber": 43,
    "params": [
      {
        "name": "transition",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "lib/parse-transition.specs.js",
    "content": "'use strict';\n\n/* eslint-env node, mocha */\n/* eslint no-unused-expressions: 0, arrow-body-style: 0 */\n\nconst parseTrasition = require('./parse-transition');\nconst { expect } = require('chai');\n\ndescribe('parseTransition', () => {\n\t['__uninitialized__', '', '  ', null, undefined].forEach((name) => {\n\t\tit(`does not allow trasition name: \"${name}\"`, () => {\n\t\t\texpect(() => parseTrasition({ name, from: 'a', to: 'b' })).to.throw();\n\t\t});\n\t});\n\t['__uninitialized__', '', '  ', null, undefined].forEach((name) => {\n\t\tit(`does not allow from state: \"${name}\"`, () => {\n\t\t\texpect(() => parseTrasition({ name: 'trans', from: name, to: 'b' })).to.throw();\n\t\t});\n\t\tit(`does not allow from state: \"['a', ${name}, 'b']\"`, () => {\n\t\t\texpect(() => parseTrasition({ name: 'trans', from: ['a', name, 'b'], to: 'b' })).to.throw();\n\t\t});\n\t\tit(`does not allow to state: \"${name}\"`, () => {\n\t\t\texpect(() => parseTrasition({ name: 'trans', from: 'a', to: name })).to.throw();\n\t\t});\n\t});\n\n\tdescribe('state object notation', () => {\n\t\tit('converts state objects to string representation', () => {\n\t\t\texpect(parseTrasition({ name: 'trans', from: { a: 'b', c: 'd' }, to: 'b' })).to.eql([\n\t\t\t{ name: 'trans', from: 'a:b|c:d', to: 'b' },\n\t\t\t]);\n\t\t});\n\n\t\tit('\"to\" in object notation patches \"from\" state object', () => {\n\t\t\texpect(parseTrasition(\n\t\t\t\t{ name: 'trans', from: { a: 'b', c: 'd' }, to: { a: 'x' } })).to.eql([\n\t\t\t\t{ name: 'trans', from: 'a:b|c:d', to: 'a:x|c:d' },\n\t\t\t\t]);\n\t\t});\n\n\t\tit('can use arrays in \"from\" clause values to create state permutations', () => {\n\t\t\texpect(parseTrasition(\n\t\t\t\t{ name: 'trans', from: { k1: ['k1_v1', 'k1_v2', 'k1_v3'], k2: 'k2_v1', k3: ['k3_v1', 'k3_v2'] }, to: 'x' })).to.eql([\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v1|k2:k2_v1|k3:k3_v1', to: 'x' },\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v1|k2:k2_v1|k3:k3_v2', to: 'x' },\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v2|k2:k2_v1|k3:k3_v1', to: 'x' },\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v2|k2:k2_v1|k3:k3_v2', to: 'x' },\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v3|k2:k2_v1|k3:k3_v1', to: 'x' },\n\t\t\t\t{ name: 'trans', from: 'k1:k1_v3|k2:k2_v1|k3:k3_v2', to: 'x' },\n\t\t\t\t]);\n\t\t});\n\t});\n\n\tit('expand array from clause to multiple transitins', () => {\n\t\texpect(parseTrasition({ name: 'trans', from: ['a', 'b'], to: 'b' })).to.eql([\n\t\t\t{ name: 'trans', from: 'a', to: 'b' },\n\t\t\t{ name: 'trans', from: 'b', to: 'b' },\n\t\t]);\n\t});\n\tit('state values must match regex: /^([a-zA-Z0-9-_.#\\\\/@\\\\$%^!=<>+~?]+|\\\\*)$/', () => {\n\t\texpect(() => parseTrasition({ name: 't1', from: 'a:1', to: 'a' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't2', from: 'a|1', to: 'a' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't1', from: ['a:1'], to: 'a' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't2', from: ['a|1'], to: 'a' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't1', from: { s1: ['a:1'] }, to: 'a' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't2', from: { s1: ['a|1'] }, to: 'a' })).to.throw(/Invalid state value!/);\n\n\t\texpect(() => parseTrasition({ name: 't1', from: 'a', to: 'a:1' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't2', from: 'a', to: 'a|1' })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't1', from: 'a', to: { s1: 'a:1' } })).to.throw(/Invalid state value!/);\n\t\texpect(() => parseTrasition({ name: 't2', from: 'a', to: { s1: 'a|1' } })).to.throw(/Invalid state value!/);\n\t});\n});\n",
    "static": true,
    "longname": "lib/parse-transition.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "parseTrasition",
    "memberof": "lib/parse-transition.specs.js",
    "static": true,
    "longname": "lib/parse-transition.specs.js~parseTrasition",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/parse-transition.specs.js",
    "static": true,
    "longname": "lib/parse-transition.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/parse-transition.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "lib/to-camel-case.js",
    "content": "'use strict';\n\n/** @private */\nmodule.exports = (str) => {\n\tconst words = str.split(/[_-]|:/);\n\tlet result = words[0];\n\tfor (let n = 1; n < words.length; n++) {\n\t\tresult = result + words[n].charAt(0).toUpperCase() + words[n].substring(1);\n\t}\n\treturn result;\n};\n",
    "static": true,
    "longname": "lib/to-camel-case.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "tocamelcase",
    "memberof": "lib/to-camel-case.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/to-camel-case.js~tocamelcase",
    "access": "private",
    "export": true,
    "importPath": "@trigo/fsm/lib/to-camel-case.js",
    "importStyle": "tocamelcase",
    "description": null,
    "lineNumber": 4,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "lib/to-camel-case.specs.js",
    "content": "'use strict';\n\nconst { expect } = require('chai');\nconst toCamelCase = require('./to-camel-case');\n\ndescribe('toCamelCase', () => {\n\tit('worsWith \"_\" delimiter', () => {\n\t\texpect(toCamelCase('test_func_name')).to.equal('testFuncName');\n\t});\n\tit('worsWith \"-\" delimiter', () => {\n\t\texpect(toCamelCase('test-func-name')).to.equal('testFuncName');\n\t});\n\tit('worsWith \":\" delimiter', () => {\n\t\texpect(toCamelCase('test:func:name')).to.equal('testFuncName');\n\t});\n});\n",
    "static": true,
    "longname": "lib/to-camel-case.specs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "expect",
    "memberof": "lib/to-camel-case.specs.js",
    "static": true,
    "longname": "lib/to-camel-case.specs.js~expect",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/to-camel-case.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "toCamelCase",
    "memberof": "lib/to-camel-case.specs.js",
    "static": true,
    "longname": "lib/to-camel-case.specs.js~toCamelCase",
    "access": null,
    "export": false,
    "importPath": "@trigo/fsm/lib/to-camel-case.specs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]